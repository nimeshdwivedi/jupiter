/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import XMLHelper.ConnectionHelper;
import XMLHelper.TaskHelper;
import componentBean.ComparisonTask;
import componentBean.DBConnection;
import componentBean.DBTable;
import componentBean.SessionParameter;
import componentBean.TaskSourceObject;
import dbHelper.ConnectionProvider;
import dbHelper.DatabaseHelper;
import static gui.TableSelectionPage.sessionParameter;
import java.awt.Color;
import java.awt.Frame;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.xml.bind.JAXBException;
import xmlBean.Reference;

/**
 *
 * @author nimeshd
 */
public class ManageTasks extends javax.swing.JFrame {

    /**
     * Creates new form ManageTasks
     */
    public ManageTasks() {
        try {
            taskNames = new XMLHelper.TaskHelper().getTaskNames();
            defautTaskListModel.clear();
            if (taskNames != null) {
                for (String s : taskNames) {
                    ManageTasks.defautTaskListModel.addElement(s);
                }
            }
            String[] dbNames = new XMLHelper.ConnectionHelper().getDBConnectionNames();
            defautSourceDBListModel.addElement("");
            defautTargetDBListModel.addElement("");
            for (String s : dbNames) {
                defautSourceDBListModel.addElement(s);
                defautTargetDBListModel.addElement(s);
            }

        } catch (JAXBException ex) {
            Logger.getLogger(ManageTasks.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        jLabel13.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jTextField1 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jTextField2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();
        jTextField3 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("DBComp - Data Comparer Tool");
        setFocusTraversalPolicyProvider(true);
        setLocation(new java.awt.Point(300, 150));

        jList1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tasks List"));
        jList1.setModel(defautTaskListModel);
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setName("taskList"); // NOI18N
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jTextField1.setToolTipText("Search");

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("%");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Source Object"));

        jLabel1.setText("Database");

        jLabel2.setText("Schema");

        jLabel3.setText("Table List");

        jComboBox1.setModel(SourceTableModel);
        jComboBox1.setName("sourceTableList"); // NOI18N
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox4.setModel(defautSourceDBListModel);
        jComboBox4.setModel(defautSourceDBListModel);
        jComboBox4.setName("sourceDBList"); // NOI18N
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jTextField2.setEnabled(false);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel8.setText("Status");

        jLabel10.setText(":");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField2)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Target Object"));

        jLabel4.setText("Database");

        jLabel5.setText("Schema");

        jLabel6.setText("Table List");

        jComboBox2.setModel(TargetTableModel);
        jComboBox2.setName("targetTableList"); // NOI18N
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox5.setModel(defautTargetDBListModel);
        jComboBox5.setName("targetDBList"); // NOI18N
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });

        jTextField3.setEnabled(false);

        jLabel9.setText("Status");

        jLabel11.setText(":");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField3)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(45, 45, 45)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11))
                .addContainerGap())
        );

        jLabel7.setText("Task Name");

        jTextField6.setName("taskName"); // NOI18N

        jList2.setBorder(javax.swing.BorderFactory.createTitledBorder("Column List"));
        jList2.setModel(selectedTablesColumnModel);
        jScrollPane2.setViewportView(jList2);

        jButton1.setText("Cancel");
        jButton1.setName("cancelButton"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Execute");
        jButton2.setName("executeButton"); // NOI18N
        jButton2.setSelected(true);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Save");
        jButton3.setEnabled(false);
        jButton3.setName("saveButton"); // NOI18N

        jButton4.setText("Save as New");
        jButton4.setEnabled(false);
        jButton4.setName("saveAsNewButton"); // NOI18N

        jButton5.setText("Delete");
        jButton5.setName("deleteButton"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel12.setText("Message:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addContainerGap(161, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton4)
                        .addComponent(jButton5)
                        .addComponent(jCheckBox1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2)
                        .addComponent(jButton3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            String taskName = jList1.getSelectedValue();
            if (new TaskHelper().deleteTask(taskName)) {
                defautTaskListModel.removeElement(taskName);
                defautSourceDBListModel.removeAllElements();
                defautTargetDBListModel.removeAllElements();
                jTextField2.setText(null);
                jTextField3.setText(null);
                SourceTableModel.removeAllElements();
                TargetTableModel.removeAllElements();
                selectedTablesColumnModel.removeAllElements();
                JOptionPane.showMessageDialog(null, taskName + " successfully deleted.");
            } else {
                JOptionPane.showMessageDialog(null, "Error occurred. Could not delete " + taskName);
            }
        } catch (JAXBException ex) {
            Logger.getLogger(ManageTasks.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {

            String selectedTaskName = jList1.getSelectedValue();
            ComparisonTask task = new TaskHelper().getComparisonTask(selectedTaskName);

            List<String> tableList = new ArrayList<>();
            for (int i = 0; i < SourceTableModel.getSize(); i++) {
                tableList.add(SourceTableModel.getElementAt(i));
            }
            SessionParameter sp = new SessionParameter();
            sp.setParamName("sourceDBUser");
            sp.setParamValue(jTextField2.getText());
            sessionParameter.add(sp);
            sp = null;
            sp = new SessionParameter();
            sp.setParamName("targetDBUser");
            sp.setParamValue(jTextField3.getText());
            sessionParameter.add(sp);
            sp = null;
            sp = new SessionParameter();
            sp.setParamName("SOURCE_DB");
            sp.setParamValue(defautSourceDBListModel.getSelectedItem().toString());
            sessionParameter.add(sp);
            sp = null;
            sp = new SessionParameter();
            sp.setParamName("TARGET_DB");
            sp.setParamValue(defautTargetDBListModel.getSelectedItem().toString());
            sessionParameter.add(sp);

            if (task.getDataType() == null && task.getDataType() == null) {
                JOptionPane.showMessageDialog(null, "Tasks do not have table data type not defined. Please try making a new task");
                if (new TaskHelper().deleteTask(selectedTaskName)) {
                    defautTaskListModel.removeElement(selectedTaskName);
                    defautSourceDBListModel.removeAllElements();
                    defautTargetDBListModel.removeAllElements();
                    jTextField2.setText(null);
                    jTextField3.setText(null);
                    SourceTableModel.removeAllElements();
                    TargetTableModel.removeAllElements();
                    selectedTablesColumnModel.removeAllElements();
                    JOptionPane.showMessageDialog(null, " Successfully deleted the incomplete task " + selectedTaskName + "...");
                }
            } else {
                sp = null;
                sp = new SessionParameter();
                sp.setParamName("DATA_OPTION");
                sp.setParamValue(task.getDataOption());
                sessionParameter.add(sp);

                sp = null;
                sp = new SessionParameter();
                sp.setParamName("DATA_TYPE");
                sp.setParamValue(task.getDataType());
                sessionParameter.add(sp);

                for (Frame f : Frame.getFrames()) {
                    if (f.getName().equals("frame3")) {
                        f.dispose();
                    }
                }
                boolean columnSelectionMain = new ColumnSelectionPage().columnSelectionMain(sessionParameter, tableList, task);
                if (columnSelectionMain){
                    if(homePage != null)
                    homePage.dispose();
                    else if(tableSelectionPage != null)
                        tableSelectionPage.dispose();
                    else if(columnSelectionPage != null)
                        columnSelectionPage.dispose();
                    else if (schemaOptionSelection != null){
                        schemaOptionSelection.dispose();
                    }
                }
                Reference ref = new XMLHelper.ConnectionHelper().getDBReference(defautSourceDBListModel.getSelectedItem().toString());
                final DBConnection source = new XMLHelper.ConnectionHelper().extractDBConnection(ref);
                Connection conn = new ConnectionProvider().getODSConnection(source);
                DatabaseHelper.fetchClobTables(conn, jTextField2.getText());
                if (columnSelectionMain) {
                    this.setVisible(false);
                }
            }

        } catch (JAXBException | InterruptedException ex) {
            JOptionPane.showMessageDialog(null, "Please check the inputs of this task. Make sure databases, schemas and tables are populated...");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageTasks.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:

        SourceTableModel.removeAllElements();
        TargetTableModel.removeAllElements();
        defautSourceDBListModel.setSelectedItem(null);
        defautTargetDBListModel.setSelectedItem(null);
        String selectedTaskName = jList1.getSelectedValue();
        jTextField6.setText(selectedTaskName);
        try {
            ComparisonTask task = new TaskHelper().getComparisonTask(selectedTaskName);
            if (task != null) {
                for (int i = 0; i < defautSourceDBListModel.getSize(); i++) {
                    if (defautSourceDBListModel.getElementAt(i).equalsIgnoreCase(task.getSourceDBName())) {
                        defautSourceDBListModel.setSelectedItem(defautSourceDBListModel.getElementAt(i));
                        jComboBox4.setSelectedIndex(i);
                        break;
                    }
                }
                for (int i = 0; i < defautTargetDBListModel.getSize(); i++) {
                    if (defautTargetDBListModel.getElementAt(i).equalsIgnoreCase(task.getTargetDBName())) {
                        defautTargetDBListModel.setSelectedItem(defautTargetDBListModel.getElementAt(i));
                        jComboBox5.setSelectedIndex(i);
                        break;
                    }
                }
                //defautSourceDBListModel.setSelectedItem(task.getSourceDBName());
                //defautTargetDBListModel.setSelectedItem(task.getTargetDBName());
                jTextField2.setText(task.getSourceObject().getOwner());
                jTextField3.setText(task.getTargetObject().getOwner());
                for (DBTable t : task.getSourceObject().getTables()) {
                    SourceTableModel.addElement(t.getName());
                }
                for (DBTable t : task.getTargetObject().getTables()) {
                    TargetTableModel.addElement(t.getName());
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(ManageTasks.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jList1ValueChanged

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            selectedTablesColumnModel.removeAllElements();
            try {
                String selectedTable = SourceTableModel.getSelectedItem().toString();
                String taskName = jList1.getSelectedValue();
                ComparisonTask task = new TaskHelper().getComparisonTask(taskName);
                TaskSourceObject object = task.getSourceObject();
                for (DBTable tab : object.getTables()) {
                    if (tab.getName().equals(SourceTableModel.getSelectedItem())) {
                        if (tab.getColumnList() != null && tab.getColumnList().size() > 0) {
                            for (String s : tab.getColumnList()) {
                                selectedTablesColumnModel.addElement(s);
                            }
                        }
                        break;
                    }
                }
            } catch (JAXBException ex) {
                Logger.getLogger(ManageTasks.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            selectedTablesColumnModel.removeAllElements();
            try {
                String taskName = jList1.getSelectedValue();
                ComparisonTask task = new TaskHelper().getComparisonTask(taskName);
                TaskSourceObject object = task.getSourceObject();
                for (DBTable tab : object.getTables()) {
                    if (tab.getName().equals(TargetTableModel.getSelectedItem())) {
                        if (tab.getColumnList() != null && tab.getColumnList().size() > 0) {
                            for (String s : tab.getColumnList()) {
                                selectedTablesColumnModel.addElement(s);
                            }
                        }
                        break;
                    }
                }
            } catch (JAXBException ex) {
                Logger.getLogger(ManageTasks.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        String sourceConnection = (String) jComboBox4.getSelectedItem();
        jLabel13.setText("Fetching details of source connection");
        if (sourceConnection != null) {
            try {
                ConnectionHelper ch = new ConnectionHelper();
                Reference connRef = ch.getDBReference(sourceConnection);
                DBConnection conn = ch.extractDBConnection(connRef);
                jTextField2.setText(conn.getUsername());
                jLabel10.setText("Success");
            } catch (JAXBException ex) {
                jLabel10.setText("Failure");
                jLabel10.setForeground(Color.red);
                JOptionPane.showMessageDialog(null, "Error occurred while retrieving details of this connection");
            }
        }
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        String targetConnection = (String) jComboBox5.getSelectedItem();
        jLabel13.setText("Fetching details of target connection");
        if (targetConnection != null) {
            try {
                ConnectionHelper ch = new ConnectionHelper();
                Reference connRef = ch.getDBReference(targetConnection);
                DBConnection conn = ch.extractDBConnection(connRef);
                jTextField3.setText(conn.getUsername());
                jLabel11.setText("Success");
            } catch (JAXBException ex) {
                jLabel11.setText("Failure");
                jLabel11.setForeground(Color.red);
                JOptionPane.showMessageDialog(null, "Error occurred while retrieving details of this connection");
            }
        }
    }//GEN-LAST:event_jComboBox5ActionPerformed

    public static void manageTasksMain(Object object) {
        String className = object.getClass().getName();
        if(className.equals("gui.HomePage")){
            ManageTasks.homePage = (HomePage) object;
        }else if(className.equals("gui.ColumnSelectionPage")){
            ManageTasks.columnSelectionPage = (ColumnSelectionPage) object;
        }else if(className.equals("gui.TableSelectionPage")){
            ManageTasks.tableSelectionPage = (TableSelectionPage) object;
        }else if(className.equals("gui.SchemaOptionSelection")){
            ManageTasks.schemaOptionSelection = (SchemaOptionSelection) object;
        }
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageTasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageTasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageTasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageTasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageTasks().setVisible(true);
            }
        });
    }

    /*
    public static void main(String[] args) {
        /* Set the Nimbus look and feel *
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         *
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageTasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageTasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageTasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageTasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form *
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageTasks().setVisible(true);
            }
        });
    }*/
    private static DefaultListModel<String> defautTaskListModel = new DefaultListModel<>();
    private DefaultComboBoxModel<String> defautSourceDBListModel = new DefaultComboBoxModel<>();
    private DefaultComboBoxModel<String> defautTargetDBListModel = new DefaultComboBoxModel<>();
    private DefaultComboBoxModel<String> SourceSchemaModel = new DefaultComboBoxModel<>();
    private DefaultComboBoxModel<String> TargetSchemaModel = new DefaultComboBoxModel<>();
    private DefaultComboBoxModel<String> SourceTableModel = new DefaultComboBoxModel<>();
    private DefaultComboBoxModel<String> TargetTableModel = new DefaultComboBoxModel<>();
    private DefaultComboBoxModel<String> selectedTablesColumnModel = new DefaultComboBoxModel<>();
    private static HomePage homePage;
    private static TableSelectionPage tableSelectionPage;
    private static ColumnSelectionPage columnSelectionPage;
    private static SchemaOptionSelection schemaOptionSelection;
    public String[] taskNames;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
}
